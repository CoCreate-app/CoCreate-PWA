/*! For license information please see CoCreate-pwa.js.LICENSE.txt */
!function(Q,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.CoCreate=e():(Q.CoCreate=Q.CoCreate||{},Q.CoCreate.pwa=e())}(this,(()=>(()=>{"use strict";var __webpack_modules__={"./src/cache.js":(__unused_webpack_module,exports)=>{eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.deleteCache = deleteCache;\nexports.deleteFile = deleteFile;\nconst cacheBtn = document.getElementById('cacheBtn');\n\nfunction deleteCache(cache) {\n  if ('serviceWorker' in navigator) {\n    return caches.delete(key); // caches.keys().then(function(cacheNames) {\n    //     cacheNames.forEach(function(cacheName) {\n    //         if (cacheName == cache)\n    //             caches.delete(cacheName);\n    //     });\n    // });\n  }\n} // function cleanCache(cacheName, numeroItems) {\n//     caches.open(cacheName).then((cache) => {\n//         return cache.keys().then((keys) => {\n//             if (keys.length > numeroItems) {\n//                 cache.delete(keys[0]).then(cleanCache(cacheName, numeroItems));\n//             }\n//         });\n//     });\n// }\n\n\nfunction deleteFile(cacheName, fileName) {\n  if ('serviceWorker' in navigator) {\n    caches.open(cacheName).then(function (cache) {\n      cache.delete(fileName).then(function (response) {\n        return response; // console.log(cacheName, fileName, response)\n      });\n    });\n  }\n}\n\nif (cacheBtn) {\n  cacheBtn.addEventListener('click', function () {\n    deleteFile('dynamic-v2', '/CoCreate-components/CoCreate-pwa/src/index.js');\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY2FjaGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLE1BQU1BLFFBQVEsR0FBR0MsUUFBUSxDQUFDQyxjQUFULENBQXdCLFVBQXhCLENBQWpCOztBQUVBLFNBQVNDLFdBQVQsQ0FBcUJDLEtBQXJCLEVBQTRCO0VBQ3hCLElBQUksbUJBQW1CQyxTQUF2QixFQUFrQztJQUM5QixPQUFPQyxNQUFNLENBQUNDLE1BQVAsQ0FBY0MsR0FBZCxDQUFQLENBRDhCLENBRzlCO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtFQUNIO0FBQ0osQyxDQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUEsU0FBU0MsVUFBVCxDQUFvQkMsU0FBcEIsRUFBK0JDLFFBQS9CLEVBQXlDO0VBQ3JDLElBQUksbUJBQW1CTixTQUF2QixFQUFrQztJQUM5QkMsTUFBTSxDQUFDTSxJQUFQLENBQVlGLFNBQVosRUFBdUJHLElBQXZCLENBQTRCLFVBQVNULEtBQVQsRUFBZ0I7TUFDeENBLEtBQUssQ0FBQ0csTUFBTixDQUFhSSxRQUFiLEVBQXVCRSxJQUF2QixDQUE0QixVQUFTQyxRQUFULEVBQW1CO1FBQzNDLE9BQU9BLFFBQVAsQ0FEMkMsQ0FFM0M7TUFDSCxDQUhEO0lBSUgsQ0FMRDtFQU1IO0FBQ0o7O0FBR0QsSUFBSWQsUUFBSixFQUFjO0VBQ1ZBLFFBQVEsQ0FBQ2UsZ0JBQVQsQ0FBMEIsT0FBMUIsRUFBbUMsWUFBVztJQUMxQ04sVUFBVSxDQUFDLFlBQUQsRUFBZSxnREFBZixDQUFWO0VBQ0gsQ0FGRDtBQUdIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29DcmVhdGUucHdhLy4vc3JjL2NhY2hlLmpzPzExY2IiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY2FjaGVCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2FjaGVCdG4nKTtcblxuZnVuY3Rpb24gZGVsZXRlQ2FjaGUoY2FjaGUpIHtcbiAgICBpZiAoJ3NlcnZpY2VXb3JrZXInIGluIG5hdmlnYXRvcikge1xuICAgICAgICByZXR1cm4gY2FjaGVzLmRlbGV0ZShrZXkpO1xuICAgICAgICBcbiAgICAgICAgLy8gY2FjaGVzLmtleXMoKS50aGVuKGZ1bmN0aW9uKGNhY2hlTmFtZXMpIHtcbiAgICAgICAgLy8gICAgIGNhY2hlTmFtZXMuZm9yRWFjaChmdW5jdGlvbihjYWNoZU5hbWUpIHtcbiAgICAgICAgLy8gICAgICAgICBpZiAoY2FjaGVOYW1lID09IGNhY2hlKVxuICAgICAgICAvLyAgICAgICAgICAgICBjYWNoZXMuZGVsZXRlKGNhY2hlTmFtZSk7XG4gICAgICAgIC8vICAgICB9KTtcbiAgICAgICAgLy8gfSk7XG4gICAgfVxufVxuXG4vLyBmdW5jdGlvbiBjbGVhbkNhY2hlKGNhY2hlTmFtZSwgbnVtZXJvSXRlbXMpIHtcbi8vICAgICBjYWNoZXMub3BlbihjYWNoZU5hbWUpLnRoZW4oKGNhY2hlKSA9PiB7XG4vLyAgICAgICAgIHJldHVybiBjYWNoZS5rZXlzKCkudGhlbigoa2V5cykgPT4ge1xuLy8gICAgICAgICAgICAgaWYgKGtleXMubGVuZ3RoID4gbnVtZXJvSXRlbXMpIHtcbi8vICAgICAgICAgICAgICAgICBjYWNoZS5kZWxldGUoa2V5c1swXSkudGhlbihjbGVhbkNhY2hlKGNhY2hlTmFtZSwgbnVtZXJvSXRlbXMpKTtcbi8vICAgICAgICAgICAgIH1cbi8vICAgICAgICAgfSk7XG4vLyAgICAgfSk7XG4vLyB9XG5cbmZ1bmN0aW9uIGRlbGV0ZUZpbGUoY2FjaGVOYW1lLCBmaWxlTmFtZSkge1xuICAgIGlmICgnc2VydmljZVdvcmtlcicgaW4gbmF2aWdhdG9yKSB7XG4gICAgICAgIGNhY2hlcy5vcGVuKGNhY2hlTmFtZSkudGhlbihmdW5jdGlvbihjYWNoZSkge1xuICAgICAgICAgICAgY2FjaGUuZGVsZXRlKGZpbGVOYW1lKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coY2FjaGVOYW1lLCBmaWxlTmFtZSwgcmVzcG9uc2UpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSlcbiAgICB9XG59XG5cblxuaWYgKGNhY2hlQnRuKSB7XG4gICAgY2FjaGVCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICAgICAgZGVsZXRlRmlsZSgnZHluYW1pYy12MicsICcvQ29DcmVhdGUtY29tcG9uZW50cy9Db0NyZWF0ZS1wd2Evc3JjL2luZGV4LmpzJyk7XG4gICAgfSk7XG59XG5cbmV4cG9ydCB7ZGVsZXRlQ2FjaGUsIGRlbGV0ZUZpbGV9Il0sIm5hbWVzIjpbImNhY2hlQnRuIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImRlbGV0ZUNhY2hlIiwiY2FjaGUiLCJuYXZpZ2F0b3IiLCJjYWNoZXMiLCJkZWxldGUiLCJrZXkiLCJkZWxldGVGaWxlIiwiY2FjaGVOYW1lIiwiZmlsZU5hbWUiLCJvcGVuIiwidGhlbiIsInJlc3BvbnNlIiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/cache.js\n")},"./src/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _cache = _interopRequireDefault(__webpack_require__(/*! ./cache.js */ \"./src/cache.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst installContainer = document.getElementById('installContainer');\nconst installBtn = document.getElementById('installBtn');\n/**\n * Warn the page must be served over HTTPS\n * The `beforeinstallprompt` event won't fire if the page is served over HTTP.\n * Installability requires a service worker with a fetch event handler, and\n * if the page isn't served over HTTPS, the service worker won't load.\n */\n\nif (window.location.protocol === 'http:') {\n  const requireHTTPS = document.getElementById('requireHTTPS');\n  const link = requireHTTPS.querySelector('a');\n  link.href = window.location.href.replace('http://', 'https://');\n  requireHTTPS.classList.remove('hidden');\n}\n\nwindow.addEventListener('beforeinstallprompt', event => {\n  console.log('👍', 'beforeinstallprompt', event); // Stash the event so it can be triggered later.\n\n  window.deferredPrompt = event; // Remove the 'hidden' class from the install button container\n\n  installContainer.classList.toggle('hidden', false);\n});\ninstallBtn.addEventListener('click', async () => {\n  console.log('👍', 'installBtn-clicked');\n  const promptEvent = window.deferredPrompt;\n\n  if (!promptEvent) {\n    // The deferred prompt isn't available.\n    return;\n  } // Show the install prompt.\n\n\n  promptEvent.prompt(); // Log the result\n\n  const result = await promptEvent.userChoice;\n  console.log('👍', 'userChoice', result); // Reset the deferred prompt variable, since\n  // prompt() can only be called once.\n\n  window.deferredPrompt = null; // Hide the install button.\n\n  installContainer.classList.toggle('hidden', true);\n});\nwindow.addEventListener('appinstalled', event => {\n  console.log('👍', 'appinstalled', event); // Clear the deferredPrompt so it can be garbage collected\n\n  window.deferredPrompt = null;\n});\nlet workerPath = 'sw.js'; // if (config && config.serviceWorker)\n//     workerPath = config.serviceWorker\n\nwindow.addEventListener(\"load\", function (event) {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.getRegistration(workerPath).then(registration => {\n      if (registration && registration.active) {\n        console.log('Service Worker Active');\n      } else {\n        navigator.serviceWorker.register(workerPath).then(reg => {\n          reg.onupdatefound = () => {\n            const installingWorker = reg.installing;\n\n            installingWorker.onstatechange = () => {\n              console.log('Service Worker', installingWorker.state);\n            };\n          };\n        }).catch(err => console.log('SW ERROR', err));\n      }\n    });\n  }\n});\nvar _default = {\n  cache: _cache.default\n};\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFHLENBQUNDLGFBQUosR0FBb0IsTUFBTTtZQUN0QixNQUFNQyxnQkFBZ0IsR0FBR0YsR0FBRyxDQUFDRyxVQUE3Qjs7WUFDQUQsZ0JBQWdCLENBQUNFLGFBQWpCLEdBQWlDLE1BQU07Y0FDbkNwQixPQUFPLENBQUNDLEdBQVIsQ0FBWSxnQkFBWixFQUE4QmlCLGdCQUFnQixDQUFDRyxLQUEvQztZQUNILENBRkQ7VUFHSCxDQUxEO1FBTUgsQ0FSRCxFQVNDQyxLQVRELENBU09DLEdBQUcsSUFBSXZCLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFVBQVosRUFBd0JzQixHQUF4QixDQVRkO01BV0g7SUFDSixDQWhCRDtFQWlCSDtBQUNKLENBcEJEO2VBdUJlO0VBQUNDLEtBQUssRUFBTEE7QUFBRCxDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ29DcmVhdGUucHdhLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNhY2hlIGZyb20gJy4vY2FjaGUuanMnXG5cblxuY29uc3QgaW5zdGFsbENvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbnN0YWxsQ29udGFpbmVyJyk7XG5jb25zdCBpbnN0YWxsQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2luc3RhbGxCdG4nKTtcblxuLyoqXG4gKiBXYXJuIHRoZSBwYWdlIG11c3QgYmUgc2VydmVkIG92ZXIgSFRUUFNcbiAqIFRoZSBgYmVmb3JlaW5zdGFsbHByb21wdGAgZXZlbnQgd29uJ3QgZmlyZSBpZiB0aGUgcGFnZSBpcyBzZXJ2ZWQgb3ZlciBIVFRQLlxuICogSW5zdGFsbGFiaWxpdHkgcmVxdWlyZXMgYSBzZXJ2aWNlIHdvcmtlciB3aXRoIGEgZmV0Y2ggZXZlbnQgaGFuZGxlciwgYW5kXG4gKiBpZiB0aGUgcGFnZSBpc24ndCBzZXJ2ZWQgb3ZlciBIVFRQUywgdGhlIHNlcnZpY2Ugd29ya2VyIHdvbid0IGxvYWQuXG4gKi9cbmlmICh3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wgPT09ICdodHRwOicpIHtcbiAgICBjb25zdCByZXF1aXJlSFRUUFMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVxdWlyZUhUVFBTJyk7XG4gICAgY29uc3QgbGluayA9IHJlcXVpcmVIVFRQUy5xdWVyeVNlbGVjdG9yKCdhJyk7XG4gICAgbGluay5ocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWYucmVwbGFjZSgnaHR0cDovLycsICdodHRwczovLycpO1xuICAgIHJlcXVpcmVIVFRQUy5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcbn1cblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2JlZm9yZWluc3RhbGxwcm9tcHQnLCAoZXZlbnQpID0+IHtcbiAgICBjb25zb2xlLmxvZygn8J+RjScsICdiZWZvcmVpbnN0YWxscHJvbXB0JywgZXZlbnQpO1xuICAgIC8vIFN0YXNoIHRoZSBldmVudCBzbyBpdCBjYW4gYmUgdHJpZ2dlcmVkIGxhdGVyLlxuICAgIHdpbmRvdy5kZWZlcnJlZFByb21wdCA9IGV2ZW50O1xuICAgIC8vIFJlbW92ZSB0aGUgJ2hpZGRlbicgY2xhc3MgZnJvbSB0aGUgaW5zdGFsbCBidXR0b24gY29udGFpbmVyXG4gICAgaW5zdGFsbENvbnRhaW5lci5jbGFzc0xpc3QudG9nZ2xlKCdoaWRkZW4nLCBmYWxzZSk7XG59KTtcblxuaW5zdGFsbEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFzeW5jKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCfwn5GNJywgJ2luc3RhbGxCdG4tY2xpY2tlZCcpO1xuICAgIGNvbnN0IHByb21wdEV2ZW50ID0gd2luZG93LmRlZmVycmVkUHJvbXB0O1xuICAgIGlmICghcHJvbXB0RXZlbnQpIHtcbiAgICAgICAgLy8gVGhlIGRlZmVycmVkIHByb21wdCBpc24ndCBhdmFpbGFibGUuXG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gU2hvdyB0aGUgaW5zdGFsbCBwcm9tcHQuXG4gICAgcHJvbXB0RXZlbnQucHJvbXB0KCk7XG4gICAgLy8gTG9nIHRoZSByZXN1bHRcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBwcm9tcHRFdmVudC51c2VyQ2hvaWNlO1xuICAgIGNvbnNvbGUubG9nKCfwn5GNJywgJ3VzZXJDaG9pY2UnLCByZXN1bHQpO1xuICAgIC8vIFJlc2V0IHRoZSBkZWZlcnJlZCBwcm9tcHQgdmFyaWFibGUsIHNpbmNlXG4gICAgLy8gcHJvbXB0KCkgY2FuIG9ubHkgYmUgY2FsbGVkIG9uY2UuXG4gICAgd2luZG93LmRlZmVycmVkUHJvbXB0ID0gbnVsbDtcbiAgICAvLyBIaWRlIHRoZSBpbnN0YWxsIGJ1dHRvbi5cbiAgICBpbnN0YWxsQ29udGFpbmVyLmNsYXNzTGlzdC50b2dnbGUoJ2hpZGRlbicsIHRydWUpO1xufSk7XG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdhcHBpbnN0YWxsZWQnLCAoZXZlbnQpID0+IHtcbiAgICBjb25zb2xlLmxvZygn8J+RjScsICdhcHBpbnN0YWxsZWQnLCBldmVudCk7XG4gICAgLy8gQ2xlYXIgdGhlIGRlZmVycmVkUHJvbXB0IHNvIGl0IGNhbiBiZSBnYXJiYWdlIGNvbGxlY3RlZFxuICAgIHdpbmRvdy5kZWZlcnJlZFByb21wdCA9IG51bGw7XG59KTtcblxubGV0IHdvcmtlclBhdGggPSAnc3cuanMnXG4vLyBpZiAoY29uZmlnICYmIGNvbmZpZy5zZXJ2aWNlV29ya2VyKVxuLy8gICAgIHdvcmtlclBhdGggPSBjb25maWcuc2VydmljZVdvcmtlclxuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBpZiAoJ3NlcnZpY2VXb3JrZXInIGluIG5hdmlnYXRvcikge1xuICAgICAgICBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5nZXRSZWdpc3RyYXRpb24od29ya2VyUGF0aCkudGhlbihyZWdpc3RyYXRpb24gPT4ge1xuICAgICAgICAgICAgaWYocmVnaXN0cmF0aW9uICYmIHJlZ2lzdHJhdGlvbi5hY3RpdmUpIHsgXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1NlcnZpY2UgV29ya2VyIEFjdGl2ZScpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLnJlZ2lzdGVyKHdvcmtlclBhdGgpXG4gICAgICAgICAgICAgICAgLnRoZW4ocmVnID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmVnLm9udXBkYXRlZm91bmQgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpbnN0YWxsaW5nV29ya2VyID0gcmVnLmluc3RhbGxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnN0YWxsaW5nV29ya2VyLm9uc3RhdGVjaGFuZ2UgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1NlcnZpY2UgV29ya2VyJywgaW5zdGFsbGluZ1dvcmtlci5zdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coJ1NXIEVSUk9SJywgZXJyKSk7XG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufSk7XG5cblxuZXhwb3J0IGRlZmF1bHQge2NhY2hlfSJdLCJuYW1lcyI6WyJpbnN0YWxsQ29udGFpbmVyIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImluc3RhbGxCdG4iLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInByb3RvY29sIiwicmVxdWlyZUhUVFBTIiwibGluayIsInF1ZXJ5U2VsZWN0b3IiLCJocmVmIiwicmVwbGFjZSIsImNsYXNzTGlzdCIsInJlbW92ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsImNvbnNvbGUiLCJsb2ciLCJkZWZlcnJlZFByb21wdCIsInRvZ2dsZSIsInByb21wdEV2ZW50IiwicHJvbXB0IiwicmVzdWx0IiwidXNlckNob2ljZSIsIndvcmtlclBhdGgiLCJuYXZpZ2F0b3IiLCJzZXJ2aWNlV29ya2VyIiwiZ2V0UmVnaXN0cmF0aW9uIiwidGhlbiIsInJlZ2lzdHJhdGlvbiIsImFjdGl2ZSIsInJlZ2lzdGVyIiwicmVnIiwib251cGRhdGVmb3VuZCIsImluc3RhbGxpbmdXb3JrZXIiLCJpbnN0YWxsaW5nIiwib25zdGF0ZWNoYW5nZSIsInN0YXRlIiwiY2F0Y2giLCJlcnIiLCJjYWNoZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n")}},__webpack_module_cache__={};function __webpack_require__(Q){var e=__webpack_module_cache__[Q];if(void 0!==e)return e.exports;var n=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](n,n.exports,__webpack_require__),n.exports}var __webpack_exports__=__webpack_require__("./src/index.js");return __webpack_exports__=__webpack_exports__.default,__webpack_exports__})()));